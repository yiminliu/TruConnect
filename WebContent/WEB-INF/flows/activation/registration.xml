<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/webflow  
    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

  <!-- DECLARE REQUIRED OBJECTS -->
  <var name="registration" class="com.trc.user.activation.Registration" />
  <var name="termsAndConditions" class="com.trc.user.activation.TermsAndConditions" />
  <var name="activationMessage" class="com.trc.user.activation.ActivationMessage" />
  <var name="device" class="com.tscp.mvne.Device" />
  <var name="networkInfo" class="com.tscp.mvne.NetworkInfo" />
  <var name="account" class="com.tscp.mvne.Account" />
  <var name="creditCardPayment" class="com.trc.user.activation.CreditCardPayment" />

  <!-- BEGIN GATHERING INFORMATION -->
  <subflow-state id="requestUserInfo" subflow="addUserInfo">
    <input name="registration" value="registration" />
    <transition on="success" to="requestContactInfo">
      <evaluate expression="activationLogger.start(registration.user)" />
      <evaluate expression="activationLogger.startState(actStateFactory.RESERVE_PROFILE)" />
      <evaluate expression="activationLogger.endState()" />
    </transition>
  </subflow-state>

  <subflow-state id="requestContactInfo" subflow="addContactInfo">
    <on-entry>
      <evaluate expression="activationLogger.startState(actStateFactory.INFO_CONTACT)" />
    </on-entry>
    <input name="contactInfo" value="registration.user.contactInfo" />
    <transition on="success" to="requestDeviceInfo">
      <evaluate expression="activationLogger.endState()" />
    </transition>
  </subflow-state>

  <subflow-state id="requestDeviceInfo" subflow="addDevice_noAction">
    <on-entry>
      <evaluate expression="activationLogger.startState(actStateFactory.INFO_DEVICE)" />
    </on-entry>
    <input name="device" value="device" />
    <input name="contactInfo" value="registration.user.contactInfo" />
    <transition on="success" to="showPlansAndTerms">
      <evaluate expression="activationLogger.endState()" />
    </transition>
  </subflow-state>

  <view-state id="showPlansAndTerms" view="activation/terms/plansAndTerms" model="termsAndConditions">
    <transition on="submit" to="requestCreditCardInfo" />
  </view-state>

  <subflow-state id="requestCreditCardInfo" subflow="addCreditCard_initial">
    <on-entry>
      <evaluate expression="activationLogger.startState(actStateFactory.INFO_PAYMENT)" />
    </on-entry>
    <input name="user" value="registration.user" />
    <input name="creditCardPayment" value="creditCardPayment" />
    <transition on="success" to="processActivation">
      <evaluate expression="activationLogger.endState()" />
    </transition>
  </subflow-state>

  <!-- PROCESS ACTIVATION -->
  <subflow-state id="processActivation" subflow="processActivation">
    <input name="registration" value="registration" />
    <input name="activationMessage" value="activationMessage" />
    <input name="device" value="device" />
    <input name="networkInfo" value="networkInfo" />
    <input name="creditCardPayment" value="creditCardPayment" />
    <input name="account" value="account" />
    <transition on="success" to="success" />
    <transition on="generalError" to="generalError" />
  </subflow-state>

  <!-- END STATES -->
  <end-state id="generalError" view="exception/uncaughtException">
    <on-entry>
      <evaluate expression="activationLogger.exception(flowExecutionException, rootCauseException)" />
    </on-entry>
  </end-state>

  <end-state id="success" view="activation/registration/success" />

  <end-state id="cancel" view="externalRedirect:contextRelative:/">
    <on-entry>
      <evaluate expression="registrationManager.cancelRegistration(registration)" />
    </on-entry>
  </end-state>

  <!-- Global Transitions -->
  <global-transitions>
    <transition on="cancel" to="cancel" validate="false" />
    <transition on="generalError" to="generalError" validate="false" />
    <transition on="java.lang.Exception" to="generalError" />
  </global-transitions>
</flow> 